M = '0000000100100011010001010110011110001001101010111100110111101111' - '0';
Key = '0001001100110100010101110111100110011011101111001101111111110001' - '0';

K = roundkeygen(Key);

assert(isequal(K(1, :), '000110110000001011101111111111000111000001110010' - '0'));
assert(isequal(K(2, :),  '011110011010111011011001110110111100100111100101' - '0'));
assert(isequal(K(3, :),  '010101011111110010001010010000101100111110011001' - '0'));
assert(isequal(K(4, :),  '011100101010110111010110110110110011010100011101' - '0'));
assert(isequal(K(5, :),  '011111001110110000000111111010110101001110101000' - '0'));
assert(isequal(K(6, :),  '011000111010010100111110010100000111101100101111' - '0'));
assert(isequal(K(7, :),  '111011001000010010110111111101100001100010111100' - '0'));
assert(isequal(K(8, :),  '111101111000101000111010110000010011101111111011' - '0'));
assert(isequal(K(9, :),  '111000001101101111101011111011011110011110000001' - '0'));
assert(isequal(K(10, :),  '101100011111001101000111101110100100011001001111' - '0'));
assert(isequal(K(11, :),  '001000010101111111010011110111101101001110000110' - '0'));
assert(isequal(K(12, :),  '011101010111000111110101100101000110011111101001' - '0'));
assert(isequal(K(13, :),  '100101111100010111010001111110101011101001000001' - '0'));
assert(isequal(K(14, :),  '010111110100001110110111111100101110011100111010' - '0'));
assert(isequal(K(15, :),  '101111111001000110001101001111010011111100001010' - '0'));
assert(isequal(K(16, :),  '110010110011110110001011000011100001011111110101'- '0'));

DESencode(M, Key);